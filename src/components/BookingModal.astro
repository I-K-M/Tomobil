---
interface Props {
  id: string;
  name: string;
}

const { id, name } = Astro.props;
---

<div
  id={`booking-modal-${id}`}
  class="fixed inset-0 bg-black bg-opacity-50 hidden items-center justify-center z-50"
>
  <div class="bg-white rounded-lg p-8 max-w-md w-full mx-4 relative">
    <button
      onclick={`document.getElementById('booking-modal-${id}').classList.add('hidden')`}
      class="absolute top-4 right-4 text-gray-500 hover:text-gray-700"
    >
      <svg
        class="w-6 h-6"
        fill="none"
        stroke="currentColor"
        viewBox="0 0 24 24"
      >
        <path
          stroke-linecap="round"
          stroke-linejoin="round"
          stroke-width="2"
          d="M6 18L18 6M6 6l12 12"
        ></path>
      </svg>
    </button>

    <h2 class="text-2xl font-bold mb-4">Book {name}</h2>
    
    <form
      id={`booking-form-${id}`}
      class="space-y-4"
      onsubmit="handleBookingSubmit(event)"
    >
      <div>
        <label for="pickup-date" class="block text-sm font-medium text-gray-700"
          >Pickup Date</label
        >
        <input
          type="date"
          id="pickup-date"
          name="pickup-date"
          required
          min={new Date().toISOString().split('T')[0]}
          class="mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-blue-500 focus:ring-blue-500"
        />
      </div>

      <div>
        <label for="return-date" class="block text-sm font-medium text-gray-700"
          >Return Date</label
        >
        <input
          type="date"
          id="return-date"
          name="return-date"
          required
          min={new Date().toISOString().split('T')[0]}
          class="mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-blue-500 focus:ring-blue-500"
        />
      </div>

      <div>
        <label for="driver-name" class="block text-sm font-medium text-gray-700"
          >Full Name</label
        >
        <input
          type="text"
          id="driver-name"
          name="driver-name"
          required
          class="mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-blue-500 focus:ring-blue-500"
        />
      </div>

      <div>
        <label for="driver-email" class="block text-sm font-medium text-gray-700"
          >Email</label
        >
        <input
          type="email"
          id="driver-email"
          name="driver-email"
          required
          class="mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-blue-500 focus:ring-blue-500"
        />
      </div>

      <div>
        <label for="driver-phone" class="block text-sm font-medium text-gray-700"
          >Phone</label
        >
        <input
          type="tel"
          id="driver-phone"
          name="driver-phone"
          required
          class="mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-blue-500 focus:ring-blue-500"
        />
      </div>

      <input type="hidden" name="car-id" value={id} />

      <button
        type="submit"
        class="w-full bg-blue-600 text-white py-2 px-4 rounded-md hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2"
      >
        Book Now
      </button>
    </form>
  </div>
</div>

<script>
  function handleBookingSubmit(event) {
    event.preventDefault();
    const form = event.target;
    const formData = new FormData(form);
    const data = Object.fromEntries(formData.entries());
    
    // Here you would typically send this data to your backend
    console.log('Booking submitted:', data);
    
    // Show success message
    alert('Booking submitted successfully! We will contact you shortly.');
    
    // Close the modal
    const modalId = form.id.replace('booking-form-', 'booking-modal-');
    document.getElementById(modalId).classList.add('hidden');
  }
</script>
